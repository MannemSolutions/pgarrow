version: '3'
services:
  builder:
    build: ./docker/builder
    volumes:
    - ./:/host
  postgres:
    image: postgres
    environment:
      POSTGRES_PASSWORD: pgarrow
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
    ports:
    - "5432"
    volumes:
    - ./:/host
#  zookeeper:
#    image: 'bitnami/zookeeper:latest'
#    ports:
#      - '2181:2181'
#    environment:
#      ALLOW_ANONYMOUS_LOGIN: yes
#    networks:
#      - app-tier
  kafka:
    image: 'bitnami/kafka:latest'
    ports:
      - '9092:9092'
    environment:
      KAFKA_ENABLE_KRAFT: yes
      KAFKA_CFG_PROCESS_ROLES: broker,controller
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
#     KAFKA_CFG_LISTENERS: PLAINTEXT://:9092
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://127.0.0.1:9092
      KAFKA_BROKER_ID: 1
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@127.0.0.1:9093
#     KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: yes
#    depends_on:
#      - zookeeper
    networks:
      - app-tier
  pgarrow:
    build: ./docker/pgarrow
    networks:
      - app-tier
  arrowpg:
    build: ./docker/arrowpg
    networks:
      - app-tier
  rabbitmq:
    image: rabbitmq
    ports:
    - "5672"
    - "15672"
    networks:
      - app-tier

networks:
  app-tier:
    driver: bridge
